use serde::{Serialize, Deserialize};
use strum::{Display, EnumString};
<%_
  var camelize = function(str) { return _.upperFirst(_.camelCase(str)); };
  kbns.forEach((kbn) => {
  let values = kbn.values.map((value) => {
    return `${camelize(value.pname)}, // ${value.lname}`
  }); _%>
// <%= kbn.lname %>
#[derive(Display, EnumString, Clone, PartialEq, Eq, Serialize, Deserialize, Debug, sqlx::Type)]
#[sqlx(type_name = "type_enum_<%= kbn.pname %>", rename_all = "snake_case")]
pub enum <%= camelize(kbn.pname) %>Kbn {
    <%- values.join("\n    ") %>
}
<% }) %>